#!/bin/bash
SSD=/dev/disk/by-id/ata-KINGSTON_RBU-SUS151S364GD_50026B7E51D74E12
KEY=/dev/disk/by-id/usb-Generic_Power_Saving_USB_000000000260-0:0
BOOT=/dev/disk/by-id/usb-Generic_Power_Saving_USB_000000000260-0:0-part1

#(
#echo "$(tput setaf 6 & tput smso)Starting live ISO download . . .$(tput sgr0)"
#wget http://mirrors.ocf.berkeley.edu/archlinux/iso/$(date +%Y).$(date +%m).01/archlinux-$(date +%Y).$(date +%m).01-dual.iso --output-document=/tmp/live.iso
#mv -v /tmp/live.iso /mnt/boot
#) &

echo "$(tput setaf 6 & tput smso)Creating new GPT tables . . .$(tput sgr0)"
parted -s $SSD mktable gpt
parted -s $KEY mktable gpt 
parted -s $KEY -- mkpart boot 2048s -34s

echo "$(tput setaf 6 & tput smso)Generating keyfile . . .$(tput sgr0)"
dd bs=1024 count=8 if=/dev/urandom of=keyfile iflag=fullblock

echo "$(tput setaf 6 & tput smso)Encrypting . . .$(tput sgr0)"
cryptsetup -v luksFormat $SSD keyfile --batch-mode
cryptsetup -v open --type luks $SSD sys --key-file=keyfile
cryptsetup -v luksFormat $BOOT
cryptsetup -v open --type luks $BOOT boot

echo "$(tput setaf 6 & tput smso)Creating LVM . . .$(tput sgr0)"
vgcreate -v sys /dev/mapper/sys
lvcreate -v -l +100%FREE sys -n root
#vgcreate -v key /dev/mapper/key
#lvcreate -v -l +100%FREE key -n boot

echo "$(tput setaf 6 & tput smso)Making filesystems . . .$(tput sgr0)"
mkfs.btrfs -L root -f /dev/mapper/sys-root
mkfs.btrfs -L boot -f /dev/mapper/boot

echo "$(tput setaf 6 & tput smso)Mounting filesystems . . .$(tput sgr0)"
mount -v /dev/mapper/sys-root /mnt
mkdir -v /mnt/boot
mount -v /dev/mapper/boot /mnt/boot

echo "$(tput setaf 6 & tput smso)Inserting keyfile . . .$(tput sgr0)"
cp -v keyfile /mnt/boot
shred -v keyfile -n 8 -z

echo "$(tput setaf 6 & tput smso)Generating fstab . . .$(tput sgr0)"
umount -v /mnt/boot
mkdir -v /mnt/etc
genfstab -U -p /mnt >> /mnt/etc/fstab
sed -i 's/relatime/noatime,discard,compress=lzo/g' /mnt/etc/fstab
mount -v -o remount /mnt
mount -v /dev/mapper/boot /mnt/boot

echo "$(tput setaf 6 & tput smso)Installing packages . . .$(tput sgr0)"
pacstrap /mnt base base-devel

echo "$(tput setaf 6 & tput smso)Starting next stage . . .$(tput sgr0)"
cp -v -r payload/. /mnt
arch-chroot /mnt ./chroot
